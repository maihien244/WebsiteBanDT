<div class="container col" id="products">
  <div id="header-container">
    <h3 id="title" class="text-center">Wish List</h3>
  </div>
  <div class="select-action mt-lg-5">
    <select id="mass-action">
      <option value="0">Batch Actions</option>
      <option value="2">Delete</option>
    </select>
    <div class="btn btn-primary" style="margin-left: 4rem;" id="submit-action">Actions</div>
  </div>
  <table class="table mt-2">
    <thead>
      <tr>
        <th scope="col">Index</th>
        <th scope="col" >
          <input type="checkbox" id="select-all">
        </th>
        <th scope="col">
          Name
          {{{sortable _sort 'name'}}}
        </th>
        <th scope="col">
          Manufacturer
          {{{sortable _sort 'manufacturer'}}}
        </th>
        <th scope="col">
          Status
          {{{sortable _sort 'status'}}}
        </th>
        <th scope="col">
          Price
          {{{sortable _sort 'price'}}}
        </th>
        <th scope="col">
          Discount
          {{{sortable _sort 'discount'}}}
        </th>
        <th scope="col"></th>
      </tr>
    </thead>
    <tbody>
      {{#each wishlist}}
            <tr>
                <td scope="row">{{sum @index 1}}</td>
                <td>
                  <input type="checkbox" id="checked-input" data-id="{{this._id}}">
                </td>
                <td>{{this.name}}</td>
                <td>{{this.manufacturer}}</td>
                <td>{{this.status}}</td>
                <td>{{this.price}}</td>
                <td>{{this.discount}}%</td>
                <td>
                    <a href="" id="buy"
                      class="btn btn-link btn-primary text-decoration-none" 
                      style="color: white;"
                      data-bs-toggle="modal" 
                      data-bs-id="{{this._id}}">Buy</a>
                    <a href="" 
                      style="color: white;"
                      class="btn btn-link btn-danger text-decoration-none" 
                      data-bs-toggle="modal" 
                      data-bs-id="{{this._id}}"
                      data-bs-target="#confirm-modal">Delete</a>
                </td>
            </tr>
      {{else}}
        <td colspan="5" class="text-center">
          Wish list is empty!
        </td>
      {{/each}}
    </tbody>
  </table>
  <div class="pagination d-flex justify-content-center">
    {{> component/layout/pagination currentPage=currentPage numberPages=numberPages}}
  </div>
</nav>
{{!-- Confirm delete --}}

<div class="modal" id="confirm-modal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Submit your action!</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Do you want to delete the product?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Exit</button>
        <button id="confirm-delete" type="button" class="btn btn-danger" >Delete</button>
      </div>
    </div>
  </div>
</div>
{{!-- edit form  --}}
<section id="form-edit" style="display: none;" data-id-pd="">
    <div class="mask d-flex align-items-center gradient-custom-3">
        <div class="container">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-12 col-md-9 col-lg-7 col-xl-6">
            <div class="card" style="border-radius: 15px;">
                <div class="card-body p-5">
                <h2 class="text-uppercase text-center mb-5">Buy Form</h2>

                <form id="form-buy" action="?" method="post">
                    <div class="row">
                        <div data-mdb-input-init="" class="form-group form-outline mb-4">
                            <label class="form-label" for="fullname">Full Name</label>
                            <input type="text" id="fullname" name="fullname" class="form-control form-control-lg" placeholder="">
                            <span class="form-message"></span>
                        </div>
                        <div data-mdb-input-init="" class="form-group form-outline mb-4">
                            <label class="form-label" for="address">Address</label>
                            <input type="text" id="address" name="address" class="form-control form-control-lg" placeholder="">
                            <span class="form-message"></span>
                        </div>
                        <div data-mdb-input-init="" class="form-group form-outline mb-4">
                            <label class="form-label" for="phoneNumber">Phone Number</label>
                            <input type="text" id="phoneNumber" name="phoneNumber" class="form-control form-control-lg" placeholder="">
                            <span class="form-message"></span>
                        </div>
                        <div data-mdb-input-init="" class="form-outline mb-4">
                            <label class="form-label" for="quanlity">Quanlity</label>
                            <input type="Number" id="quanlity" name="quanlity" class="form-control form-control-lg" placeholder="" value="1">
                        </div>
                    </div>
                    <div class="d-flex justify-content-around">
                    <button  type="button" data-mdb-button-init id="exit-btn"
                        data-mdb-ripple-init class="btn btn-secondary btn-block btn-lg gradient-custom-4 text-body" style="color: white !important">Exit</button>
                    <input type="submit" class="form-submit btn btn-primary btn-block btn-lg gradient-custom-4 text-body" value="Submit">
                    </div>
                </form>

                <script src="/js/validation.js"></script>
                <script>
                    {{!-- const submitBtn = document.getElementById('submit-btn')
                    submitBtn.addEventListener('click', (data) => {
                        console.log(1)
                        console.log(data)
                    }) --}}
                    document.addEventListener('DOMContentLoaded', function() {
                        Validator({
                            form: '#form-buy',
                            formGroupSelector: '.form-group',
                            errorSelector: '.form-message',
                            rules: [
                                Validator.isRequired('#fullname', 'Please fill the field'),
                                Validator.isRequired('#address', 'Please fill the field'),
                                Validator.isPhoneNumber('#phoneNumber', 'The field is invalid'),
                            ],
                            onSubmit: async function (data) {
                                data.id = formEdit.getAttribute('data-id-pd')
                                await axios.patch('http://localhost:3000/private/cart', data)
                                    .then(res => res.data)
                                    .then((response) => {
                                        {{!-- console.log(response) --}}
                                        if(response === undefined) {
                                            window.location.href = 'http://localhost:3000/login'
                                        } else {
                                            if(response.type == 'alert') {
                                                alert(`${response.message}`)
                                            }
                                            if(response.type == 'success') {
                                                alert(`${response.message}`)
                                                formEdit.style.display = 'none'
                                            }
                                        }
                                    })
                            }
                        })
                    })
                </script>
                </div>
            </div>
            </div>
        </div>
        </div>
    </div>
  <script>
    const exitBtn = document.getElementById('exit-btn')
    const formEdit = document.getElementById('form-edit')
    exitBtn.addEventListener('click', () => {
      formEdit.style.display = 'none'
    })
    const mask = document.querySelector('.mask')
    mask.onclick = () => {
      const formEdit = document.getElementById('form-edit')
      formEdit.style.display = 'none'
    }

    //
    document.querySelector('.mask .card').onclick = (e) => {
      e.stopPropagation()
    }

  </script>
  <script>
    const btns = document.querySelectorAll('#buy')
    const submitEditBtn = formEdit.querySelector('#submit-btn')
    btns.forEach((btn) => {
      btn.addEventListener('click', async () => {
      const id = btn.getAttribute('data-bs-id')
      const url = `http://localhost:3000/admin/products/${id}`
      await axios.get(url)
          .then(res => res.data)
          .then(dt => {
            formEdit.style.display = 'block'
            const product = dt.product
            formEdit.setAttribute('data-id-pd', product._id)
            const elements = ['name', 'manufacturer', 'status', 'price', 'discount', 'star', 'img']
            elements.forEach((element) => {
              formEdit.querySelector(`#${element}-product`).setAttribute('placeholder', product[element] || '')
            })
          })
    })
    })
    //

    submitEditBtn.addEventListener('click', async() => {
      const form = document.getElementById('form-edit-product')
      const elements = ['name', 'manufacturer', 'status', 'price', 'discount', 'star', 'img']
      const elementsConvertNumber = ['price', 'discount', 'star']
      const option = {}
      elements.forEach((element) => {
        const input = formEdit.querySelector(`#${element}-product`)
        if(input.getAttribute('placeholder') != input.value && input.value != '' && !input.value.includes('<script>')) {
          if(elementsConvertNumber.includes(element)) {
            option[element] = parseInt(input.value)
          } else {
            option[element] = input.value
          }
        }
      })
      if(Object.keys(option).length != 0) {
        let uri = ""
        for(let key in option) {
          if(uri != "") {
            uri += "&"
          }
          uri += key +"="+ encodeURIComponent(option[key])
        }
        form.action = `http://localhost:3000/admin/products/${formEdit.getAttribute('data-id-pd')}/edit/${uri}?_method=PATCH`
        form.submit()
      }
    })
  </script>
</section>

{{!-- FORM DELETE --}}


<form id="form-confirm-delete" method="POST"></form>
<form id="form-edit-product" method="POST"></form>


<script>
  document.addEventListener('DOMContentLoaded', function()  {
    var modal = document.getElementById('confirm-modal')
    var selectAll = document.getElementById('select-all')
    var inputs = document.querySelectorAll('#checked-input')
    var btnSubmit = document.getElementById('submit-action')
    var actionForm = document.getElementById('mass-action')
    var form = document.getElementById('form-confirm-delete')

    modal.addEventListener('show.bs.modal', function (event) {
      var button = event.relatedTarget
      var id = button.getAttribute('data-bs-id')
      var btnDeleteCofirm = document.getElementById('confirm-delete');
      btnDeleteCofirm.onclick = function() {
        form.action = 'http://localhost:3000/private/wishlist/' + id +'/delete?_method=PATCH'
        form.submit()
      }
    })

    //handle button if list empty
    if(inputs.length === 0) {
      btnSubmit.setAttribute('disabled','')
    } 

    //handle select checkbox 
    selectAll.onchange = () => {
      if(selectAll.checked === true) {
        inputs.forEach(input => input.checked = true)
      } else {
        inputs.forEach(input => input.checked = false)
      }
    }

    const arrInput = [...inputs]
    inputs.forEach((input) => {
      input.onchange = () => {
        const countChecked = arrInput.every(i => i.checked)
        if(countChecked === false) {
          selectAll.checked = false
        }
      }
    })

    //handle click button submit-action

    function convertUri(value) {
      return encodeURIComponent(JSON.stringify(value))
    }

    btnSubmit.addEventListener('click', () => {
      const inputChecked = arrInput.filter(input => input.checked).map(input => input.dataset.id)
      switch(actionForm.value) {
        case '0':
          break;
        case '1':
          break;
        case '2':
  	      form.action = 'http://localhost:3000/private/wishlist/' + convertUri(inputChecked) +'/deleteList?_method=PATCH'
          form.submit()
          break;
      }
    })
  })
</script>

</div>
